[{"authors":["admin"],"categories":null,"content":"I am graduate student pursuing a joint Master\u0026rsquo;s degree in Biostatistics at McGill University and in Public Health Data Science at the University of Bordeaux. I am jointly supervised by Dr. Erica Moodie and Dr. Rodolphe Thiébaut. At the moment, my research interests include dynamic treatment regimes (DTR), causal inference and image analysis.\nUpon completion of my Master\u0026rsquo;s program, I look forward to joining the Dalla Lana School of Public Health at the University of Toronto as a PhD student.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1574606542,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"http://larryshamalama.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am graduate student pursuing a joint Master\u0026rsquo;s degree in Biostatistics at McGill University and in Public Health Data Science at the University of Bordeaux. I am jointly supervised by Dr.","tags":null,"title":"Larry Dong","type":"authors"},{"authors":[],"categories":[],"content":"Here is a cheatsheet in using Anaconda with some of my personal preferences that I have retained. If you do follow this, please let me know if something is not working correctly!\nWhat is Anaconda? Simply put, Anaconda is an open-source package management system for Python. One of its most popular applications, Jupyter, is commonly used for data science related projects. In this article, I have tried to detail the steps from creating a virtual environment in Anaconda to using it in your Jupyter notebooks.\nInstalling Anaconda  Go to the Anaconda website here. Click on the appropriate distribution (Mac or Linux) and download the Anaconda installer for Python 3.7. Open Terminal and execute the following commands:  cd ~/Downloads chmod +x Anaconda3-2020.02-MacOSX-x86_64.sh ./Anaconda3-2020.02-MacOSX-x86_64.sh  If you\u0026rsquo;re on a Linux distribution, the downloaded file has a different name, so execute the commands above with the downloaded file name.\n❗ You should reset your Terminal window by simply restarting it.\nSetting up your virtual environment Creating a virtual environment for your Python project has many benefits, including version control for you and your collaborators and managing sets of installed packages for separate projects. Here are 5 steps to creating your Anaconda virtual environment and using it in a Jupyter notebook.\n1 - Creating the virtual environment conda create -n YOUR_ENV_NAME python=3.7  The command above specifies Python version in the environment to be 3.7, since this is the most stable and updated version at the moment. However, you can use a different version if you prefer.\n2 - Creating a Terminal Shortcut My preference is to create a Terminal shortcut to activate the environment.\necho \u0026quot;alias SHORTCUT_COMMAND='conda activate YOUR_ENV_NAME'\u0026quot; | cat - ~/.bash_profile \u0026gt; ~/.bash_profile source ~/.bash_profile  If you are on a Linux distribution, replace ~/.bash_profile by ~/.bashrc due to the difference in file names.\n3 - Activating your environment With the shortcut created using the commands above, you can now activate the environment by simply typing its name in Terminal!\nYOUR_ENV_NAME  4 - Installing packages Say you want to install some Python packages called package1, package2 and package3. You can use the code below to do so.\nconda install -n YOUR_ENV_NAME package1 package2 package3  5 - Adding the environment to Jupyter Often times, it would be desirable to be able to access the environment in a Jupyter notebook, which is often used for coding in Python (it\u0026rsquo;s definitely my favorite!). To add your newly created environment to Jupyter, run the following commands in Terminal.\nconda install -n YOUR_ENV_NAME ipykernel -c conda-forge python -m ipykernel install --user --name YOUR_ENV_NAME  Ready to code! Your environment should be ready to use in your Jupyter notebooks!\n Other (hopefully) useful things Locating your virtual environment My preference is to go the folder in which your environment is installed and simply removing it. To find the directory in which your virtual environment is located, you can do:\nsource activate YOUR_ENV_NAME # to activate your environment which python  You should get an output under the following format: SOME_DIRECTORY/YOUR_ENV_NAME/bin/python. The directory in which your environment is located is simply SOME_DIRECTORY.\nExample When I run which python after activating my environment called ml, I obtain /Users/larry/anaconda3/envs/ml/bin/python. It follows that the directory where my conda environments are located is Users/larry/anaconda3/envs/.\nDeleting your environment Once you have located your environment (see above) and found the directory in which your environments are located and that we will call SOME_DIRECTORY. To delete your environment, run the following commands:\ncd SOME_DIRECTORY rm -rf YOUR_ENV_NAME  Removing your environment from Jupyter Although you have deleted your environment and it no longer exists, for some reason the option to select it as a kernel is still available in your Jupyter notebook, although selecting it won\u0026rsquo;t work. To remove the environment as an option in the Jupyter notebook, run the following.\njupyter kernelspec uninstall YOUR_ENV_NAME  ","date":1587841474,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587841474,"objectID":"1c7ccf0e695f579f2603b85c990035cf","permalink":"http://larryshamalama.github.io/post/conda-cheatsheet/","publishdate":"2020-04-25T15:04:34-04:00","relpermalink":"/post/conda-cheatsheet/","section":"post","summary":"Here is a cheatsheet in using Anaconda with some of my personal preferences that I have retained. If you do follow this, please let me know if something is not working correctly!","tags":[],"title":"Conda Environments and Jupyter Notebooks","type":"post"}]